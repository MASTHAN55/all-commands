cerate "5-servers" (1-ansible, 2-dev_servers, 2-test_server).
passwd root                                                         // set password for root user.
 
##Security shell.
vim /etc/ssh/sshd_config  (38,61)-uncommit                          // giving root_user login permmisions.
systemctl restart sshd                                              // restart sshd (mandatory).        
systemctl ststus sshd
hostname -i                                                         // showing private_id.

amazon-linux-extras install ansible2 -y                             // install ansible.
yum install python3 python-pip python-dlevel -y                     

vim /etc/ansible/hosts                                              // go to ansible inventory file (or) path.
[dev]  (12-line)                                                    // adding ip_adderses inventory file (or) path.
paste ip-adderss of dev_server-1
paste ip-adderss of dev_server-2
[test]
paste ip_adderss of test_server-1
paste ip-adderss of test_server-2

ssh-keygen                                        // generating a new key.
ll .ssh/                                          // showing (id_rsa, id_rsa.pub).
ssh-copy-id root@ip_address of dev-server         // copying keys from ansible-server to dev-server.
ssh paste ip_adderss of dev-server                // connection complete ansible to dev.

-----------------------------------------------------------------------------------
## ADHOC_COMMANDS
ansible all -a "yum install git -y"               // installing git at a time all servers.
ansible all -a "git -version"                     // checking version all servers.

## module.
ansible all -m yum -a "name=git state=present"           // installing git.
ansible all -m yum -a "name=git state=absent"            // un-install git.

ansible all -m yum -a "name=httpd state=present"         // installing apache.
ansible all -m service -a "name=httpd state=started"     // starting httpd.

ansible all -m user -a "name=masthan state=present"      // creating user.
ansible all -m group -a "name=devops state=present"      // creating group.
ansible-playbook masthan.yml                             // eacute masthan.yml.
ansible-playbook masthan.yml --tags c,d                  // to execute the particular tags.
ansible-playbook masthan.yml --skip-tags a,b             // skip selected tags.
ansible all -a "cat /etc/passwd"                         // showing list of users. 

ansible all -m ping                                   // check ssh connection connect are not.



